[package]
name = "multiagent-hive"
version = "0.1.0"
edition = "2021"

[dependencies]
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
regex = "1.10"
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"

# Authentication and security
jsonwebtoken = "9.2"
md5 = "0.7"
thiserror = "1.0"
toml = "0.8"
tracing = "0.1"
axum = { version = "0.7", features = ["ws"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "fs"] }
tokio-tungstenite = "0.21"
futures-util = "0.3"
futures = "0.3"
reqwest = { version = "0.11", features = ["json"] }
async-trait = "0.1"
dashmap = "5.5"
rand = "0.8"
nalgebra = "0.32"
petgraph = "0.6"
num_cpus = "1.16"

# Optional: Add ruv-FANN for advanced neural capabilities
ruv-fann = { version = "0.1.6", optional = true, features = ["std", "serde", "parallel"] }

# Database and persistence
rusqlite = { version = "0.31", features = ["bundled", "chrono", "serde_json"] }

# Encryption and compression
aes-gcm = "0.10"
flate2 = "1.0"
base64 = "0.21"
ring = { version = "0.17", features = ["std"] }
hex = "0.4"
pbkdf2 = "0.12"
sha2 = "0.10"

# Observability and tracing
opentelemetry = "0.21"
opentelemetry-jaeger = "0.20"
tracing-opentelemetry = "0.22"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Development dependencies
[dev-dependencies]
tempfile = "3.8"

[features]
default = ["basic-nlp"]
basic-nlp = []
advanced-neural = ["ruv-fann"]
gpu-acceleration = ["ruv-fann/gpu"]

# Clippy lint configuration
[lints.clippy]
# Deny common issues that should never be allowed
all = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
suspicious = { level = "deny", priority = -1 }
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }

# Specific denials for critical issues
unwrap_used = "warn"
expect_used = "warn"
panic = "warn"
todo = "warn"
unimplemented = "warn"
unreachable = "warn"

# Performance-critical denials
clone_on_ref_ptr = "warn"
rc_buffer = "warn"
rc_mutex = "warn"

# Allow some pedantic lints that may be too strict
missing_errors_doc = "allow"
missing_panics_doc = "allow"
module_name_repetitions = "allow"
similar_names = "allow"
too_many_lines = "allow"
cast_precision_loss = "allow"
cast_possible_truncation = "allow"
cast_sign_loss = "allow"

[lints.rust]
# Rust compiler lints
unsafe_code = "warn"
missing_docs = "warn"
unused_imports = "allow"
unused_variables = "allow"
dead_code = "allow"
unreachable_code = "warn"
