 Downloading crates ...
  Downloaded ciborium-ll v0.2.2
  Downloaded ciborium v0.2.2
  Downloaded same-file v1.0.6
  Downloaded tempfile v3.22.0
  Downloaded either v1.15.0
  Downloaded is-terminal v0.4.16
  Downloaded fastrand v2.3.0
  Downloaded errno v0.3.14
  Downloaded crossbeam-deque v0.8.6
  Downloaded plotters-backend v0.3.7
  Downloaded rayon v1.11.0
  Downloaded criterion-plot v0.5.0
  Downloaded rustix v1.1.2
  Downloaded linux-raw-sys v0.11.0
    Blocking waiting for file lock on build directory
   Compiling serde v1.0.225
   Compiling num-traits v0.2.19
   Compiling crossbeam-utils v0.8.21
    Checking bitflags v2.9.4
    Checking num-integer v0.1.46
    Checking openssl v0.10.73
    Checking url v2.5.7
    Checking crossbeam-channel v0.5.15
    Checking serde_urlencoded v0.7.1
    Checking ordered-float v4.6.0
    Checking opentelemetry_sdk v0.21.2
    Checking tungstenite v0.21.0
    Checking native-tls v0.2.14
    Checking num-bigint v0.4.6
    Checking tokio-native-tls v0.3.1
    Checking approx v0.5.1
    Checking num-complex v0.4.6
    Checking ordered-float v2.10.1
    Checking tracing-serde v0.2.0
    Checking toml_datetime v0.6.11
    Checking serde_spanned v0.6.9
    Checking chrono v0.4.42
    Checking toml_edit v0.22.27
    Checking thrift v0.17.0
    Checking tracing-subscriber v0.3.20
    Checking simple_asn1 v0.6.3
    Checking simba v0.8.1
    Checking hyper-tls v0.5.0
    Checking tokio-tungstenite v0.21.0
    Checking num-rational v0.4.2
    Checking axum v0.7.9
    Checking nalgebra v0.32.6
    Checking rusqlite v0.31.0
    Checking tower-http v0.5.2
    Checking warp v0.3.7
    Checking reqwest v0.11.27
    Checking opentelemetry-jaeger v0.20.0
    Checking jsonwebtoken v9.3.1
    Checking tracing-opentelemetry v0.22.0
    Checking toml v0.8.23
    Checking uuid v1.18.1
    Checking crossbeam-epoch v0.9.18
    Checking bincode v1.3.3
    Checking either v1.15.0
   Compiling rayon-core v1.13.0
    Checking crossbeam-deque v0.8.6
    Checking half v2.6.0
    Checking clap_lex v0.7.5
    Checking ciborium-io v0.2.2
    Checking plotters-backend v0.3.7
   Compiling rustix v1.1.2
    Checking anstyle v1.0.11
    Checking clap_builder v4.5.47
    Checking plotters-svg v0.3.7
    Checking ciborium-ll v0.2.2
    Checking itertools v0.10.5
    Checking multiagent-hive v0.1.0-alpha.4 (/workspaces/ai-orchestrator-hub/backend)
    Checking same-file v1.0.6
    Checking cast v0.3.0
    Checking linux-raw-sys v0.11.0
    Checking criterion-plot v0.5.0
    Checking walkdir v2.5.0
    Checking clap v4.5.47
    Checking rayon v1.11.0
warning: unused import: `VerificationTier`
  --> src/agents/adaptive_verification.rs:20:83
   |
20 |     SimpleVerificationResult, SimpleVerificationStatus, SimpleVerificationSystem, VerificationTier,
   |                                                                                   ^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:10:9
   |
10 | #![warn(unused_imports)]
   |         ^^^^^^^^^^^^^^

warning: unused import: `Agent`
 --> src/core/hive/agent_management/lifecycle.rs:6:28
  |
6 | use crate::agents::agent::{Agent, AgentType};
  |                            ^^^^^

warning: unused import: `super::types::AgentMetrics`
  --> src/core/hive/agent_management/lifecycle.rs:11:5
   |
11 | use super::types::AgentMetrics;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AgentType`
 --> src/core/hive/agent_management/manager.rs:6:35
  |
6 | use crate::agents::agent::{Agent, AgentType};
  |                                   ^^^^^^^^^

warning: unused imports: `AgentMetrics` and `AgentRegistrationResult`
  --> src/core/hive/agent_management/manager.rs:16:20
   |
16 | use super::types::{AgentMetrics, AgentRegistrationResult};
   |                    ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `safe_json` and `safe_option`
  --> src/core/hive/background_processes.rs:59:36
   |
59 | use crate::utils::error_handling::{safe_json, safe_option};
   |                                    ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `crate::utils::error_handling::safe_option`
  --> src/core/hive/coordinator/core.rs:17:5
   |
17 | use crate::utils::error_handling::safe_option;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `HiveError`
 --> src/core/hive/metrics_collection/collector.rs:6:27
  |
6 | use crate::utils::error::{HiveError, HiveResult};
  |                           ^^^^^^^^^

warning: unused imports: `safe_json` and `safe_option`
 --> src/core/hive/metrics_collection/collector.rs:7:36
  |
7 | use crate::utils::error_handling::{safe_json, safe_option};
  |                                    ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `SwarmMetrics`
 --> src/core/hive/metrics_collection/collector.rs:9:33
  |
9 | use super::types::{HiveMetrics, SwarmMetrics};
  |                                 ^^^^^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
  --> src/core/hive/metrics_collection/collector.rs:13:13
   |
13 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> src/core/hive/metrics_collection/export.rs:11:5
   |
11 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> src/core/hive/metrics_collection/export.rs:12:5
   |
12 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> src/core/hive/metrics_collection/export.rs:13:5
   |
13 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::utils::error::HiveResult`
 --> src/core/hive/metrics_collection/history.rs:5:5
  |
5 | use crate::utils::error::HiveResult;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> src/core/hive/metrics_collection/history.rs:10:5
   |
10 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> src/core/hive/metrics_collection/history.rs:11:5
   |
11 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> src/core/hive/metrics_collection/history.rs:12:5
   |
12 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> src/core/hive/metrics_collection/events.rs:9:5
  |
9 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> src/core/hive/metrics_collection/events.rs:10:5
   |
10 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> src/core/hive/metrics_collection/events.rs:11:5
   |
11 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `crate::utils::error_handling::safe_json`
 --> src/core/hive/task_management/task_creation.rs:9:5
  |
9 | use crate::utils::error_handling::safe_json;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::error::Error`
  --> src/core/hive/task_management/task_creation.rs:10:5
   |
10 | use std::error::Error;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `CacheKey`
  --> src/core/hive/task_management/task_distributor.rs:19:43
   |
19 | use crate::infrastructure::cached_query::{CacheKey, CachedQueryConfig, CachedQueryManager};
   |                                           ^^^^^^^^

warning: unused import: `crate::tasks::task::Task`
  --> src/core/hive/task_management/task_distributor.rs:21:5
   |
21 | use crate::tasks::task::Task;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::utils::error_recovery::ContextAwareRecovery`
  --> src/core/hive/task_management/task_executor.rs:10:5
   |
10 | use crate::utils::error_recovery::ContextAwareRecovery;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `agent_recover` and `recover_with_context`
  --> src/core/hive/task_management/task_executor.rs:11:13
   |
11 | use crate::{agent_recover, recover_with_context};
   |             ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::task`
  --> src/core/hive/task_management/task_executor.rs:16:5
   |
16 | use tokio::task;
   |     ^^^^^^^^^^^

warning: unused import: `crate::agents::agent::Agent`
 --> src/core/hive/task_management_legacy/distributor.rs:6:5
  |
6 | use crate::agents::agent::Agent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `safe_json` and `safe_option`
  --> src/core/hive/task_management_legacy/distributor.rs:11:36
   |
11 | use crate::utils::error_handling::{safe_json, safe_option};
   |                                    ^^^^^^^^^  ^^^^^^^^^^^

warning: unused import: `crate::utils::error::HiveResult`
 --> src/core/hive/task_management_legacy/execution.rs:6:5
  |
6 | use crate::utils::error::HiveResult;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> src/core/hive/task_management_legacy/execution.rs:12:5
   |
12 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> src/core/hive/task_management_legacy/execution.rs:13:5
   |
13 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::utils::error::HiveResult`
 --> src/core/hive/task_management_legacy/analytics.rs:6:5
  |
6 | use crate::utils::error::HiveResult;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `TaskStatus`
 --> src/core/hive/task_management_legacy/analytics.rs:9:41
  |
9 | use super::types::{TaskExecutionResult, TaskStatus};
  |                                         ^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> src/core/hive/task_management_legacy/analytics.rs:12:5
   |
12 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> src/core/hive/task_management_legacy/analytics.rs:13:5
   |
13 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> src/core/hive/task_management_legacy/analytics.rs:14:5
   |
14 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `rand::Rng`
 --> src/infrastructure/cache_invalidation.rs:8:5
  |
8 | use rand::Rng;
  |     ^^^^^^^^^

warning: unused import: `regex::Regex`
 --> src/infrastructure/cache_invalidation.rs:9:5
  |
9 | use regex::Regex;
  |     ^^^^^^^^^^^^

warning: unused import: `warn`
  --> src/infrastructure/cache_invalidation.rs:15:28
   |
15 | use tracing::{debug, info, warn};
   |                            ^^^^

warning: unused import: `InvalidationStats`
 --> src/infrastructure/cache_monitoring.rs:6:75
  |
6 | use crate::infrastructure::cache_invalidation::{CacheInvalidationManager, InvalidationStats};
  |                                                                           ^^^^^^^^^^^^^^^^^

warning: unused import: `CachedQueryStats`
 --> src/infrastructure/cache_monitoring.rs:7:63
  |
7 | use crate::infrastructure::cached_query::{CachedQueryManager, CachedQueryStats};
  |                                                               ^^^^^^^^^^^^^^^^

warning: unused import: `HiveError`
 --> src/infrastructure/cache_monitoring.rs:8:27
  |
8 | use crate::utils::error::{HiveError, HiveResult};
  |                           ^^^^^^^^^

warning: unused import: `HiveError`
 --> src/infrastructure/cache_optimization.rs:8:27
  |
8 | use crate::utils::error::{HiveError, HiveResult};
  |                           ^^^^^^^^^

warning: unused import: `HiveError`
 --> src/infrastructure/cache_warming.rs:7:27
  |
7 | use crate::utils::error::{HiveError, HiveResult};
  |                           ^^^^^^^^^

warning: unused import: `Instant`
  --> src/infrastructure/cache_warming.rs:11:27
   |
11 | use std::time::{Duration, Instant};
   |                           ^^^^^^^

warning: unused import: `IntelligentCache`
 --> src/infrastructure/cached_query.rs:7:45
  |
7 |     BatchQueryOptimizer, BatchQueryRequest, IntelligentCache, IntelligentCacheConfig,
  |                                             ^^^^^^^^^^^^^^^^

warning: unused import: `warn`
  --> src/infrastructure/cached_query.rs:17:28
   |
17 | use tracing::{debug, info, warn};
   |                            ^^^^

warning: unused imports: `cached_query` and `deduplicated_query`
 --> src/infrastructure/intelligent_cache.rs:8:13
  |
8 | use crate::{cached_query, deduplicated_query};
  |             ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^

warning: unused import: `MetricThresholds`
  --> src/infrastructure/monitoring/production_monitoring.rs:16:38
   |
16 | use crate::infrastructure::metrics::{MetricThresholds, MetricsCollector};
   |                                      ^^^^^^^^^^^^^^^^

warning: unused import: `crate::utils::config::MonitoringConfig`
  --> src/infrastructure/monitoring/production_monitoring.rs:20:5
   |
20 | use crate::utils::config::MonitoringConfig;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AlertLevel`
 --> src/infrastructure/monitoring/prometheus_exporter.rs:7:38
  |
7 | use crate::infrastructure::metrics::{AlertLevel, MetricsCollector, SystemMetrics};
  |                                      ^^^^^^^^^^

warning: unused import: `HiveError`
 --> src/infrastructure/performance_integration.rs:9:27
  |
9 | use crate::utils::error::{HiveError, HiveResult};
  |                           ^^^^^^^^^

warning: ambiguous glob re-exports
  --> src/infrastructure/mod.rs:48:9
   |
48 | pub use cache_invalidation::*;
   |         ^^^^^^^^^^^^^^^^^^^^^ the name `InvalidationStrategy` in the type namespace is first re-exported here
...
52 | pub use cached_query::*;
   |         --------------- but the name `InvalidationStrategy` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> src/infrastructure/mod.rs:49:9
   |
49 | pub use cache_monitoring::*;
   |         ^^^^^^^^^^^^^^^^^^^ the name `DatabaseLoadReductionMetrics` in the type namespace is first re-exported here
...
52 | pub use cached_query::*;
   |         --------------- but the name `DatabaseLoadReductionMetrics` in the type namespace is also re-exported here

warning: unused import: `std::error::Error`
  --> src/utils/error_handling.rs:39:5
   |
39 | use std::error::Error;
   |     ^^^^^^^^^^^^^^^^^

warning: unused imports: `HiveError` and `HiveResult`
  --> src/server.rs:21:27
   |
21 | use crate::utils::error::{HiveError, HiveResult};
   |                           ^^^^^^^^^  ^^^^^^^^^^

    Checking ciborium v0.2.2
    Checking plotters v0.3.7
    Checking tinytemplate v1.2.1
    Checking is-terminal v0.4.16
    Checking oorandom v11.1.5
    Checking anes v0.1.6
    Checking fastrand v2.3.0
    Checking tempfile v3.22.0
    Checking criterion v0.5.1
warning: unused variable: `size`
   --> src/infrastructure/cache.rs:256:19
    |
256 |         for (key, size) in entries_to_evict {
    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_size`
    |
note: the lint level is defined here
   --> src/lib.rs:2:9
    |
  2 | #![warn(unused)]
    |         ^^^^^^
    = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

warning: unused variable: `agent_id`
   --> src/core/hive/task_management/task_distribution.rs:114:74
    |
114 |         let execution_futures = tasks_to_execute.into_iter().map(|(task, agent_id, agent)| {
    |                                                                          ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_agent_id`

warning: unused variable: `key`
   --> src/infrastructure/cache_invalidation.rs:475:9
    |
475 |         key: &CacheKey,
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `condition`
   --> src/infrastructure/cache_invalidation.rs:476:9
    |
476 |         condition: &AccessPatternCondition,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_condition`

warning: unused variable: `fetcher_clone`
   --> src/infrastructure/cached_query.rs:322:17
    |
322 |             let fetcher_clone = fetcher.clone();
    |                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_fetcher_clone`

warning: unused variable: `key_clone`
   --> src/infrastructure/cached_query.rs:323:17
    |
323 |             let key_clone = key.clone();
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_key_clone`

warning: unused variable: `data`
    --> src/infrastructure/intelligent_cache.rs:1300:28
     |
1300 |                         Ok(data) => {
     |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: unused import: `super::*`
  --> src/agents/communication_test.rs:5:9
   |
 5 |     use super::*;
   |         ^^^^^^^^
   |
note: the lint level is defined here
  --> src/lib.rs:10:9
   |
10 | #![warn(unused_imports)]
   |         ^^^^^^^^^^^^^^

warning: unused import: `safe_option`
  --> src/core/hive/background_processes.rs:59:47
   |
59 | use crate::utils::error_handling::{safe_json, safe_option};
   |                                               ^^^^^^^^^^^

warning: unused import: `crate::agents::agent::Agent`
  --> src/core/hive/coordinator/tests.rs:19:9
   |
19 |     use crate::agents::agent::Agent;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused attribute `allow`
   --> src/utils/centralized_error_handling_tests.rs:411:21
    |
411 |                     #[allow(clippy::panic)]
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the built-in attribute `allow` will be ignored, since it's applied to the macro invocation `panic`
   --> src/utils/centralized_error_handling_tests.rs:412:21
    |
412 |                     panic!("This should be caught");
    |                     ^^^^^
note: the lint level is defined here
   --> src/lib.rs:2:9
    |
  2 | #![warn(unused)]
    |         ^^^^^^
    = note: `#[warn(unused_attributes)]` implied by `#[warn(unused)]`

warning: unused import: `crate::tasks::TaskPriority`
 --> src/tests/hive_tests.rs:9:9
  |
9 |     use crate::tasks::TaskPriority;
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `create_test_task`
  --> src/tests/hive_tests.rs:11:68
   |
11 |         assert_approx_eq, create_agent_config, create_task_config, create_test_task,
   |                                                                    ^^^^^^^^^^^^^^^^

warning: unused variable: `streaming_processor`
    --> src/neural/core.rs:1098:13
     |
1098 |         let streaming_processor = self.streaming_processor.as_ref().ok_or_else(|| {
     |             ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_streaming_processor`

warning: unused variable: `streaming_processor`
    --> src/neural/core.rs:1155:13
     |
1155 |         let streaming_processor = self.streaming_processor.as_ref().ok_or_else(|| {
     |             ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_streaming_processor`

warning: unused variable: `index`
   --> src/neural/data.rs:508:41
    |
508 |     pub async fn load_sample(&mut self, index: usize) -> HiveResult<(Vec<f32>, Vec<f32>)> {
    |                                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_index`

warning: unused variable: `streaming_loader`
   --> src/neural/data.rs:732:13
    |
732 |         let streaming_loader =
    |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_streaming_loader`

warning: unused variable: `neural_stream`
    --> src/neural/training.rs:1284:13
     |
1284 |         let neural_stream = self
     |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_neural_stream`

warning: unused variable: `context`
    --> src/utils/error_recovery.rs:2278:9
     |
2278 |         context: &RecoveryContext,
     |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `base_delay`
    --> src/utils/error_recovery.rs:2333:17
     |
2333 |                 base_delay,
     |                 ^^^^^^^^^^ help: try ignoring the field: `base_delay: _`

warning: unused variable: `max_delay`
    --> src/utils/error_recovery.rs:2334:17
     |
2334 |                 max_delay,
     |                 ^^^^^^^^^ help: try ignoring the field: `max_delay: _`

warning: unused variable: `operation_name`
    --> src/utils/error_recovery.rs:2624:9
     |
2624 |         operation_name: &str,
     |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_operation_name`

warning: unused variable: `component_name`
    --> src/utils/error_recovery.rs:2625:9
     |
2625 |         component_name: &str,
     |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_component_name`

warning: unused variable: `agent_id`
    --> src/utils/error_recovery.rs:2626:9
     |
2626 |         agent_id: &str,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_agent_id`

warning: unused variable: `agent_id`
    --> src/utils/error_recovery.rs:3208:9
     |
3208 |         agent_id: Option<&str>,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_agent_id`

warning: unused variable: `agent_id`
    --> src/utils/error_recovery.rs:3251:9
     |
3251 |         agent_id: Option<&str>,
     |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_agent_id`

warning: unused variable: `duration`
    --> src/utils/error_recovery.rs:3327:77
     |
3327 |     async fn record_operation_result(&self, component: &str, success: bool, duration: Duration) {
     |                                                                             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_duration`

warning: unused variable: `size`
   --> src/infrastructure/cache.rs:256:19
    |
256 |         for (key, size) in entries_to_evict {
    |                   ^^^^ help: if this is intentional, prefix it with an underscore: `_size`
    |
    = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

warning: unused import: `StreamExt`
 --> src/neural/data.rs:7:31
  |
7 | use futures::stream::{Stream, StreamExt};
  |                               ^^^^^^^^^

warning: unused variable: `task`
   --> src/agents/adaptive_verification.rs:769:38
    |
769 |     async fn execute_task(&mut self, task: Task) -> HiveResult<TaskResult> {
    |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_task`

warning: unused variable: `start_time`
   --> src/agents/agent.rs:559:13
    |
559 |         let start_time = std::time::Instant::now();
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_start_time`

warning: unused variable: `task`
  --> src/agents/recovery.rs:23:9
   |
23 |         task: crate::tasks::Task,
   |         ^^^^ help: if this is intentional, prefix it with an underscore: `_task`

warning: unused variable: `task`
   --> src/agents/simple_verification.rs:836:38
    |
836 |     async fn execute_task(&mut self, task: Task) -> HiveResult<TaskResult> {
    |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_task`

warning: unused variable: `task`
   --> src/agents/skill_evolution.rs:222:9
    |
222 |         task: crate::tasks::Task,
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_task`

warning: unused variable: `task`
   --> src/agents/verification.rs:588:38
    |
588 |     async fn execute_task(&mut self, task: Task) -> HiveResult<TaskResult> {
    |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_task`

error[E0609]: no field `adaptation_config` on type `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
   --> src/agents/adaptive_verification.rs:984:27
    |
984 |         assert_eq!(system.adaptation_config.learning_rate, 0.05);
    |                           ^^^^^^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
984 |         assert_eq!(system.unwrap().adaptation_config.learning_rate, 0.05);
    |                           +++++++++

error[E0609]: no field `adaptation_config` on type `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
   --> src/agents/adaptive_verification.rs:985:27
    |
985 |         assert_eq!(system.adaptation_config.min_samples_for_adaptation, 10);
    |                           ^^^^^^^^^^^^^^^^^ unknown field
    |
help: one of the expressions' fields has a field of the same name
    |
985 |         assert_eq!(system.unwrap().adaptation_config.min_samples_for_adaptation, 10);
    |                           +++++++++

error[E0599]: no method named `adaptive_verify_task_result` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1037:14
     |
1036 |           let verification_result = system
     |  ___________________________________-
1037 | |             .adaptive_verify_task_result(&task, &result, None, &agent)
     | |             -^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `adaptive_verify_task_result` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:150:5
     |
 150 | /     pub async fn adaptive_verify_task_result(
 151 | |         &mut self,
 152 | |         task: &Task,
 153 | |         result: &TaskResult,
 154 | |         original_goal: Option<&str>,
 155 | |         agent: &Agent,
 156 | |     ) -> HiveResult<SimpleVerificationResult> {
     | |_____________________________________________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1036 |         let verification_result = system.expect("REASON")
     |                                         +++++++++++++++++

error[E0599]: no method named `adaptive_verify_task_result` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1052:14
     |
1051 |           let verification_result = system
     |  ___________________________________-
1052 | |             .adaptive_verify_task_result(&task, &result, None, &agent)
     | |             -^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `adaptive_verify_task_result` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:150:5
     |
 150 | /     pub async fn adaptive_verify_task_result(
 151 | |         &mut self,
 152 | |         task: &Task,
 153 | |         result: &TaskResult,
 154 | |         original_goal: Option<&str>,
 155 | |         agent: &Agent,
 156 | |     ) -> HiveResult<SimpleVerificationResult> {
     | |_____________________________________________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1051 |         let verification_result = system.expect("REASON")
     |                                         +++++++++++++++++

error[E0599]: no method named `get_current_threshold_recommendation` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1063:26
     |
1063 |         let rec = system.get_current_threshold_recommendation().await?;
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `get_current_threshold_recommendation` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:196:5
     |
 196 |     async fn get_current_threshold_recommendation(&self) -> HiveResult<ThresholdRecommendation> {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1063 |         let rec = system.expect("REASON").get_current_threshold_recommendation().await?;
     |                         +++++++++++++++++

error[E0599]: no method named `record_verification_outcome` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1093:14
     |
1092 |           let result = system
     |  ______________________-
1093 | |             .record_verification_outcome(
     | |             -^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `record_verification_outcome` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:470:5
     |
 470 | /     async fn record_verification_outcome(
 471 | |         &self,
 472 | |         task: &Task,
 473 | |         verification_result: &SimpleVerificationResult,
...    |
 476 | |         rule_thresholds_used: &HashMap<String, f64>,
 477 | |     ) -> HiveResult<()> {
     | |_______________________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1092 |         let result = system.expect("REASON")
     |                            +++++++++++++++++

error[E0609]: no field `performance_tracker` on type `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
    --> src/agents/adaptive_verification.rs:1105:30
     |
1105 |         let tracker = system.performance_tracker.read().await;
     |                              ^^^^^^^^^^^^^^^^^^^ unknown field
     |
help: one of the expressions' fields has a field of the same name
     |
1105 |         let tracker = system.unwrap().performance_tracker.read().await;
     |                              +++++++++

error[E0599]: no method named `update_accuracy_metrics` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1130:14
     |
1129 | /         system
1130 | |             .update_accuracy_metrics(&mut tracker, &verification_result_tp, true)
     | |             -^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `update_accuracy_metrics` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:504:5
     |
 504 | /     async fn update_accuracy_metrics(
 505 | |         &self,
 506 | |         tracker: &mut PerformanceTracker,
 507 | |         verification_result: &SimpleVerificationResult,
 508 | |         actual_success: bool,
 509 | |     ) {
     | |_____^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1129 |         system.expect("REASON")
     |               +++++++++++++++++

error[E0599]: no method named `update_accuracy_metrics` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1149:14
     |
1148 | /         system
1149 | |             .update_accuracy_metrics(&mut tracker, &verification_result_fp, false)
     | |             -^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `update_accuracy_metrics` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:504:5
     |
 504 | /     async fn update_accuracy_metrics(
 505 | |         &self,
 506 | |         tracker: &mut PerformanceTracker,
 507 | |         verification_result: &SimpleVerificationResult,
 508 | |         actual_success: bool,
 509 | |     ) {
     | |_____^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1148 |         system.expect("REASON")
     |               +++++++++++++++++

error[E0599]: no method named `update_accuracy_metrics` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1168:14
     |
1167 | /         system
1168 | |             .update_accuracy_metrics(&mut tracker, &verification_result_tn, false)
     | |             -^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `update_accuracy_metrics` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:504:5
     |
 504 | /     async fn update_accuracy_metrics(
 505 | |         &self,
 506 | |         tracker: &mut PerformanceTracker,
 507 | |         verification_result: &SimpleVerificationResult,
 508 | |         actual_success: bool,
 509 | |     ) {
     | |_____^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1167 |         system.expect("REASON")
     |               +++++++++++++++++

error[E0599]: no method named `update_accuracy_metrics` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1187:14
     |
1186 | /         system
1187 | |             .update_accuracy_metrics(&mut tracker, &verification_result_fn, true)
     | |             -^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `update_accuracy_metrics` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:504:5
     |
 504 | /     async fn update_accuracy_metrics(
 505 | |         &self,
 506 | |         tracker: &mut PerformanceTracker,
 507 | |         verification_result: &SimpleVerificationResult,
 508 | |         actual_success: bool,
 509 | |     ) {
     | |_____^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1186 |         system.expect("REASON")
     |               +++++++++++++++++

error[E0599]: no method named `should_adapt_thresholds` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1202:25
     |
1202 |         assert!(!system.should_adapt_thresholds().await);
     |                         ^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `should_adapt_thresholds` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:544:5
     |
 544 |     async fn should_adapt_thresholds(&self) -> bool {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1202 |         assert!(!system.expect("REASON").should_adapt_thresholds().await);
     |                        +++++++++++++++++

error[E0609]: no field `threshold_history` on type `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
    --> src/agents/adaptive_verification.rs:1206:38
     |
1206 |             let mut history = system.threshold_history.write().await;
     |                                      ^^^^^^^^^^^^^^^^^ unknown field
     |
help: one of the expressions' fields has a field of the same name
     |
1206 |             let mut history = system.unwrap().threshold_history.write().await;
     |                                      +++++++++

error[E0599]: no method named `should_adapt_thresholds` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1211:24
     |
1211 |         assert!(system.should_adapt_thresholds().await);
     |                        ^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `should_adapt_thresholds` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:544:5
     |
 544 |     async fn should_adapt_thresholds(&self) -> bool {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1211 |         assert!(system.expect("REASON").should_adapt_thresholds().await);
     |                       +++++++++++++++++

error[E0599]: no method named `calculate_outcome_score` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1232:36
     |
1232 |         let score_correct = system.calculate_outcome_score(&correct_result, true);
     |                                    ^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `calculate_outcome_score` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:662:5
     |
 662 | /     fn calculate_outcome_score(
 663 | |         &self,
 664 | |         verification_result: &SimpleVerificationResult,
 665 | |         actual_success: bool,
 666 | |     ) -> f64 {
     | |____________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1232 |         let score_correct = system.expect("REASON").calculate_outcome_score(&correct_result, true);
     |                                   +++++++++++++++++

error[E0599]: no method named `calculate_outcome_score` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1249:38
     |
1249 |         let score_incorrect = system.calculate_outcome_score(&incorrect_result, false);
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `calculate_outcome_score` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:662:5
     |
 662 | /     fn calculate_outcome_score(
 663 | |         &self,
 664 | |         verification_result: &SimpleVerificationResult,
 665 | |         actual_success: bool,
 666 | |     ) -> f64 {
     | |____________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1249 |         let score_incorrect = system.expect("REASON").calculate_outcome_score(&incorrect_result, false);
     |                                     +++++++++++++++++

error[E0599]: no method named `get_adaptation_insights` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1257:31
     |
1257 |         let insights = system.get_adaptation_insights().await;
     |                               ^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `get_adaptation_insights` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:690:5
     |
 690 |     pub async fn get_adaptation_insights(&self) -> AdaptationInsights {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1257 |         let insights = system.expect("REASON").get_adaptation_insights().await;
     |                              +++++++++++++++++

error[E0599]: no method named `calculate_recommendation_confidence` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1329:38
     |
1329 |         let confidence_high = system.calculate_recommendation_confidence(100, 0.1);
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `calculate_recommendation_confidence` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:650:5
     |
 650 | /     fn calculate_recommendation_confidence(
 651 | |         &self,
 652 | |         sample_count: usize,
 653 | |         performance_improvement: f64,
 654 | |     ) -> f64 {
     | |____________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1329 |         let confidence_high = system.expect("REASON").calculate_recommendation_confidence(100, 0.1);
     |                                     +++++++++++++++++

error[E0599]: no method named `calculate_recommendation_confidence` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1333:37
     |
1333 |         let confidence_low = system.calculate_recommendation_confidence(5, 0.1);
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `calculate_recommendation_confidence` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:650:5
     |
 650 | /     fn calculate_recommendation_confidence(
 651 | |         &self,
 652 | |         sample_count: usize,
 653 | |         performance_improvement: f64,
 654 | |     ) -> f64 {
     | |____________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1333 |         let confidence_low = system.expect("REASON").calculate_recommendation_confidence(5, 0.1);
     |                                    +++++++++++++++++

error[E0599]: no method named `get_recent_sample_count` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1342:28
     |
1342 |         let count = system.get_recent_sample_count().await;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `get_recent_sample_count` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:683:5
     |
 683 |     async fn get_recent_sample_count(&self) -> usize {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1342 |         let count = system.expect("REASON").get_recent_sample_count().await;
     |                           +++++++++++++++++

error[E0599]: no method named `record_verification_outcome` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1362:14
     |
1361 | /         system
1362 | |             .record_verification_outcome(
     | |             -^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `record_verification_outcome` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:470:5
     |
 470 | /     async fn record_verification_outcome(
 471 | |         &self,
 472 | |         task: &Task,
 473 | |         verification_result: &SimpleVerificationResult,
...    |
 476 | |         rule_thresholds_used: &HashMap<String, f64>,
 477 | |     ) -> HiveResult<()> {
     | |_______________________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1361 |         system.expect("REASON")
     |               +++++++++++++++++

error[E0599]: no method named `get_recent_sample_count` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1371:34
     |
1371 |         let count_after = system.get_recent_sample_count().await;
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     |
note: the method `get_recent_sample_count` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:683:5
     |
 683 |     async fn get_recent_sample_count(&self) -> usize {
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1371 |         let count_after = system.expect("REASON").get_recent_sample_count().await;
     |                                 +++++++++++++++++

error[E0599]: no method named `adaptive_verify_task_result` found for enum `Result` in the current scope
    --> src/agents/adaptive_verification.rs:1387:14
     |
1386 |           let verification_result = system
     |  ___________________________________-
1387 | |             .adaptive_verify_task_result(&task, &result, None, &agent)
     | |             -^^^^^^^^^^^^^^^^^^^^^^^^^^^ method not found in `Result<adaptive_verification::AdaptiveVerificationSystem, std::string::String>`
     | |_____________|
     |
     |
note: the method `adaptive_verify_task_result` exists on the type `adaptive_verification::AdaptiveVerificationSystem`
    --> src/agents/adaptive_verification.rs:150:5
     |
 150 | /     pub async fn adaptive_verify_task_result(
 151 | |         &mut self,
 152 | |         task: &Task,
 153 | |         result: &TaskResult,
 154 | |         original_goal: Option<&str>,
 155 | |         agent: &Agent,
 156 | |     ) -> HiveResult<SimpleVerificationResult> {
     | |_____________________________________________^
help: consider using `Result::expect` to unwrap the `adaptive_verification::AdaptiveVerificationSystem` value, panicking if the value is a `Result::Err`
     |
1386 |         let verification_result = system.expect("REASON")
     |                                         +++++++++++++++++

warning: variable does not need to be mutable
   --> src/core/hive/agent_management/metrics.rs:143:13
    |
143 |         let mut total_tasks;
    |             ----^^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` implied by `#[warn(unused)]`

warning: unused variable: `cache_config`
   --> src/infrastructure/cached_query.rs:162:13
    |
162 |         let cache_config = IntelligentCacheConfig {
    |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cache_config`

warning: unused variable: `freshness_reqs`
   --> src/infrastructure/intelligent_cache.rs:362:35
    |
362 |     fn calculate_ttl_score(&self, freshness_reqs: &DataFreshnessRequirements) -> f64 {
    |                                   ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_freshness_reqs`

error[E0308]: arguments to this method are incorrect
    --> src/core/hive/background_processes.rs:1073:14
     |
1073 |             .start_work_stealing_process(&agent_manager, &task_distributor)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: expected `&Arc<AgentManager>`, found `&AgentManager`
    --> src/core/hive/background_processes.rs:1073:42
     |
1073 |             .start_work_stealing_process(&agent_manager, &task_distributor)
     |                                          ^^^^^^^^^^^^^^
     = note: expected reference `&std::sync::Arc<manager::AgentManager>`
                found reference `&manager::AgentManager`
note: expected `&Arc<TaskDistributor>`, found `&TaskDistributor`
    --> src/core/hive/background_processes.rs:1073:58
     |
1073 |             .start_work_stealing_process(&agent_manager, &task_distributor)
     |                                                          ^^^^^^^^^^^^^^^^^
     = note: expected reference `&std::sync::Arc<task_distributor::TaskDistributor>`
                found reference `&task_distributor::TaskDistributor`
note: method defined here
    --> src/core/hive/background_processes.rs:417:14
     |
 417 |     async fn start_work_stealing_process(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 418 |         &self,
 419 |         agent_manager: &Arc<AgentManager>,
     |         ---------------------------------
 420 |         task_distributor: &Arc<TaskDistributor>,
     |         ---------------------------------------

warning: `multiagent-hive` (lib) generated 89 warnings (run `cargo fix --lib -p multiagent-hive` to apply 57 suggestions)
error: could not compile `multiagent-hive` (lib); 89 warnings emitted

Caused by:
  process didn't exit successfully: `/home/codespace/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name multiagent_hive --edition=2021 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 '--deny=clippy::suspicious' '--warn=clippy::style' '--warn=clippy::perf' '--warn=clippy::pedantic' '--deny=clippy::correctness' '--warn=clippy::complexity' '--warn=clippy::all' '--warn=clippy::unwrap_used' --allow=unused_variables --allow=unused_imports --warn=unsafe_code --warn=unreachable_code '--warn=clippy::unreachable' '--warn=clippy::unimplemented' '--allow=clippy::too_many_lines' '--warn=clippy::todo' '--allow=clippy::similar_names' '--warn=clippy::rc_mutex' '--warn=clippy::rc_buffer' '--warn=clippy::panic' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' --warn=missing_docs '--warn=clippy::expect_used' --allow=dead_code '--warn=clippy::clone_on_ref_ptr' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_precision_loss' '--allow=clippy::cast_possible_truncation' --cfg 'feature="basic-nlp"' --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("advanced-neural", "basic-nlp", "default", "gpu-acceleration", "ruv-fann"))' -C metadata=b8d3106d20e82638 -C extra-filename=-271cc296b3049266 --out-dir /workspaces/ai-orchestrator-hub/backend/target/debug/deps -C incremental=/workspaces/ai-orchestrator-hub/backend/target/debug/incremental -L dependency=/workspaces/ai-orchestrator-hub/backend/target/debug/deps --extern aes_gcm=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libaes_gcm-db88c165df00a659.rmeta --extern anyhow=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libanyhow-bd4207286f9386d7.rmeta --extern argon2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libargon2-0710a11c6c2aceb4.rmeta --extern async_trait=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libasync_trait-13c839a89e8262e6.so --extern axum=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libaxum-ced882dbe024e94c.rmeta --extern base64=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libbase64-c5cb9a52f2075ae5.rmeta --extern bincode=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libbincode-9b44bc61b594cfb7.rmeta --extern bytes=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libbytes-ea8af492080e3cde.rmeta --extern chrono=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libchrono-2933497478dfaba3.rmeta --extern dashmap=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libdashmap-732cde56fcf650f5.rmeta --extern flate2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libflate2-34d83fb0caa3e409.rmeta --extern futures=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libfutures-7cabe8bb568723eb.rmeta --extern futures_util=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libfutures_util-504d1c0b17a4cee9.rmeta --extern hex=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libhex-4ccaaced0dd5bf6b.rmeta --extern jsonwebtoken=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libjsonwebtoken-3ed6ff27fb4f4b22.rmeta --extern nalgebra=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libnalgebra-696e95bc704fac43.rmeta --extern num_cpus=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libnum_cpus-d510037fa9e0d994.rmeta --extern once_cell=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libonce_cell-199800b58c1e0d8f.rmeta --extern opentelemetry=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libopentelemetry-6c23fbf8aad7be0f.rmeta --extern opentelemetry_jaeger=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libopentelemetry_jaeger-39f4a787415cb9ed.rmeta --extern pbkdf2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libpbkdf2-da9fef449c277fda.rmeta --extern petgraph=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libpetgraph-185e98c57195fd6d.rmeta --extern rand=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/librand-7024a81360286bb1.rmeta --extern regex=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libregex-427c3499f4d02ef2.rmeta --extern reqwest=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libreqwest-28ccd7e18c52537b.rmeta --extern ring=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libring-f612ea0cdbf6ddbc.rmeta --extern rusqlite=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/librusqlite-685c64a368a5d3a5.rmeta --extern serde=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libserde-f0d5fd9a0550a223.rmeta --extern serde_json=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libserde_json-a6109979fd104e00.rmeta --extern sha2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libsha2-196e67ed5361a052.rmeta --extern thiserror=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libthiserror-8fc82fc44438484f.rmeta --extern tokio=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtokio-a2f283c5213347f3.rmeta --extern tokio_tungstenite=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtokio_tungstenite-f1e67fef0348af05.rmeta --extern tokio_util=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtokio_util-9f867fbe1765800e.rmeta --extern toml=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtoml-711d3efe78c4eda9.rmeta --extern tower=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtower-0994836d1aeb5964.rmeta --extern tower_http=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtower_http-7d73031358315aa5.rmeta --extern tracing=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtracing-1f4deb83d081ec2a.rmeta --extern tracing_opentelemetry=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtracing_opentelemetry-841dfd359133f8dc.rmeta --extern tracing_subscriber=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtracing_subscriber-70bd91828fff4c75.rmeta --extern uuid=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libuuid-154455992c1e1822.rmeta --extern warp=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libwarp-a09a912fa84ab94c.rmeta -L native=/workspaces/ai-orchestrator-hub/backend/target/debug/build/ring-5da70d27daf4f02b/out -L native=/workspaces/ai-orchestrator-hub/backend/target/debug/build/libsqlite3-sys-559589f9073babd3/out` (signal: 15, SIGTERM: termination signal)
warning: build failed, waiting for other jobs to finish...
error[E0369]: binary operation `==` cannot be applied to type `&{async block@src/infrastructure/intelligent_cache.rs:2266:17: 2266:22}`
    --> src/infrastructure/intelligent_cache.rs:2295:13
     |
2295 | /             assert_eq!(
2296 | |                 first_result, result,
2297 | |                 "All deduplicated results should be identical"
2298 | |             );
     | |             ^
     | |_____________|
     | |_____________&{async block@src/infrastructure/intelligent_cache.rs:2266:17: 2266:22}
     |               &{async block@src/infrastructure/intelligent_cache.rs:2266:17: 2266:22}
     |
     = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `{async block@src/infrastructure/intelligent_cache.rs:2266:17: 2266:22}` doesn't implement `std::fmt::Debug`
    --> src/infrastructure/intelligent_cache.rs:2295:13
     |
2295 | /             assert_eq!(
2296 | |                 first_result, result,
2297 | |                 "All deduplicated results should be identical"
2298 | |             );
     | |_____________^ the trait `std::fmt::Debug` is not implemented for `{async block@src/infrastructure/intelligent_cache.rs:2266:17: 2266:22}`
     |
     = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the type `UnsafeCell<HashMap<std::string::String, std::sync::Arc<error_recovery::CircuitBreaker>>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |       let panic_prevented = std::panic::catch_unwind(|| {
     |  ___________________________------------------------_^
     | |                           |
     | |                           required by a bound introduced by this call
 406 | |         // This would normally panic, but should be handled gracefully
 407 | |         let future = handler.execute_with_centralized_handling(
 408 | |             || {
...    |
 422 | |         future
 423 | |     });
     | |_____^ `UnsafeCell<HashMap<std::string::String, std::sync::Arc<error_recovery::CircuitBreaker>>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
     |
     = help: within `error_recovery::CentralizedErrorHandler`, the trait `RefUnwindSafe` is not implemented for `UnsafeCell<HashMap<std::string::String, std::sync::Arc<error_recovery::CircuitBreaker>>>`
note: required because it appears within the type `RwLock<HashMap<String, Arc<CircuitBreaker>>>`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/rwlock.rs:88:12
     |
  88 | pub struct RwLock<T: ?Sized> {
     |            ^^^^^^
note: required because it appears within the type `ArcInner<RwLock<HashMap<String, Arc<CircuitBreaker>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<ArcInner<RwLock<HashMap<String, Arc<CircuitBreaker>>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `Arc<RwLock<HashMap<String, Arc<CircuitBreaker>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `error_recovery::CentralizedErrorHandler`
    --> src/utils/error_recovery.rs:3142:12
     |
3142 | pub struct CentralizedErrorHandler {
     |            ^^^^^^^^^^^^^^^^^^^^^^^
     = note: required for `&error_recovery::CentralizedErrorHandler` to implement `UnwindSafe`
note: required because it's used within this closure
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |     let panic_prevented = std::panic::catch_unwind(|| {
     |                                                    ^^
note: required by a bound in `std::panic::catch_unwind`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/std/src/panic.rs:358:1
     = note: the full name for the type has been written to '/workspaces/ai-orchestrator-hub/backend/target/debug/deps/multiagent_hive-97ad738a146bae36.long-type-15999936470146883477.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the type `UnsafeCell<tokio::sync::batch_semaphore::Waitlist>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |       let panic_prevented = std::panic::catch_unwind(|| {
     |  ___________________________------------------------_^
     | |                           |
     | |                           required by a bound introduced by this call
 406 | |         // This would normally panic, but should be handled gracefully
 407 | |         let future = handler.execute_with_centralized_handling(
 408 | |             || {
...    |
 422 | |         future
 423 | |     });
     | |_____^ `UnsafeCell<tokio::sync::batch_semaphore::Waitlist>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
     |
     = help: within `error_recovery::CentralizedErrorHandler`, the trait `RefUnwindSafe` is not implemented for `UnsafeCell<tokio::sync::batch_semaphore::Waitlist>`
note: required because it appears within the type `Mutex<RawMutex, Waitlist>`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/src/mutex.rs:138:12
     |
 138 | pub struct Mutex<R, T: ?Sized> {
     |            ^^^^^
note: required because it appears within the type `tokio::loom::std::parking_lot::Mutex<tokio::sync::batch_semaphore::Waitlist>`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/loom/std/parking_lot.rs:22:19
     |
  22 | pub(crate) struct Mutex<T: ?Sized>(PhantomData<std::sync::Mutex<T>>, parking_lot::Mutex<T>);
     |                   ^^^^^
note: required because it appears within the type `tokio::sync::batch_semaphore::Semaphore`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/batch_semaphore.rs:35:19
     |
  35 | pub(crate) struct Semaphore {
     |                   ^^^^^^^^^
note: required because it appears within the type `RwLock<HashMap<String, Arc<CircuitBreaker>>>`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/rwlock.rs:88:12
     |
  88 | pub struct RwLock<T: ?Sized> {
     |            ^^^^^^
note: required because it appears within the type `ArcInner<RwLock<HashMap<String, Arc<CircuitBreaker>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<ArcInner<RwLock<HashMap<String, Arc<CircuitBreaker>>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `Arc<RwLock<HashMap<String, Arc<CircuitBreaker>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `error_recovery::CentralizedErrorHandler`
    --> src/utils/error_recovery.rs:3142:12
     |
3142 | pub struct CentralizedErrorHandler {
     |            ^^^^^^^^^^^^^^^^^^^^^^^
     = note: required for `&error_recovery::CentralizedErrorHandler` to implement `UnwindSafe`
note: required because it's used within this closure
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |     let panic_prevented = std::panic::catch_unwind(|| {
     |                                                    ^^
note: required by a bound in `std::panic::catch_unwind`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/std/src/panic.rs:358:1
     = note: the full name for the type has been written to '/workspaces/ai-orchestrator-hub/backend/target/debug/deps/multiagent_hive-97ad738a146bae36.long-type-14976632647324770248.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the type `(dyn StrategySelector + 'static)` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |       let panic_prevented = std::panic::catch_unwind(|| {
     |  ___________________________------------------------_^
     | |                           |
     | |                           required by a bound introduced by this call
 406 | |         // This would normally panic, but should be handled gracefully
 407 | |         let future = handler.execute_with_centralized_handling(
 408 | |             || {
...    |
 422 | |         future
 423 | |     });
     | |_____^ `(dyn StrategySelector + 'static)` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
     |
     = help: within `error_recovery::CentralizedErrorHandler`, the trait `RefUnwindSafe` is not implemented for `(dyn StrategySelector + 'static)`
note: required because it appears within the type `PhantomData<(dyn StrategySelector + 'static)>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `Unique<(dyn StrategySelector + 'static)>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/ptr/unique.rs:35:12
note: required because it appears within the type `Box<(dyn StrategySelector + 'static)>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/boxed.rs:231:12
note: required because it appears within the type `AdaptiveErrorRecovery`
    --> src/utils/error_recovery.rs:550:12
     |
 550 | pub struct AdaptiveErrorRecovery {
     |            ^^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `ContextAwareRecovery`
    --> src/utils/error_recovery.rs:2499:12
     |
2499 | pub struct ContextAwareRecovery {
     |            ^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `alloc::sync::ArcInner<ContextAwareRecovery>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<alloc::sync::ArcInner<ContextAwareRecovery>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `std::sync::Arc<ContextAwareRecovery>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `error_recovery::CentralizedErrorHandler`
    --> src/utils/error_recovery.rs:3142:12
     |
3142 | pub struct CentralizedErrorHandler {
     |            ^^^^^^^^^^^^^^^^^^^^^^^
     = note: required for `&error_recovery::CentralizedErrorHandler` to implement `UnwindSafe`
note: required because it's used within this closure
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |     let panic_prevented = std::panic::catch_unwind(|| {
     |                                                    ^^
note: required by a bound in `std::panic::catch_unwind`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/std/src/panic.rs:358:1

error[E0277]: the type `UnsafeCell<HashMap<std::string::String, HealthMetrics>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |       let panic_prevented = std::panic::catch_unwind(|| {
     |  ___________________________------------------------_^
     | |                           |
     | |                           required by a bound introduced by this call
 406 | |         // This would normally panic, but should be handled gracefully
 407 | |         let future = handler.execute_with_centralized_handling(
 408 | |             || {
...    |
 422 | |         future
 423 | |     });
     | |_____^ `UnsafeCell<HashMap<std::string::String, HealthMetrics>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
     |
     = help: within `error_recovery::CentralizedErrorHandler`, the trait `RefUnwindSafe` is not implemented for `UnsafeCell<HashMap<std::string::String, HealthMetrics>>`
note: required because it appears within the type `tokio::sync::RwLock<HashMap<std::string::String, HealthMetrics>>`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/rwlock.rs:88:12
     |
  88 | pub struct RwLock<T: ?Sized> {
     |            ^^^^^^
note: required because it appears within the type `alloc::sync::ArcInner<tokio::sync::RwLock<HashMap<std::string::String, HealthMetrics>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<ArcInner<RwLock<HashMap<String, HealthMetrics>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `std::sync::Arc<tokio::sync::RwLock<HashMap<std::string::String, HealthMetrics>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `RecoveryHealthMonitor`
    --> src/utils/error_recovery.rs:2648:12
     |
2648 | pub struct RecoveryHealthMonitor {
     |            ^^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `alloc::sync::ArcInner<RecoveryHealthMonitor>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<alloc::sync::ArcInner<RecoveryHealthMonitor>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `std::sync::Arc<RecoveryHealthMonitor>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `error_recovery::CentralizedErrorHandler`
    --> src/utils/error_recovery.rs:3142:12
     |
3142 | pub struct CentralizedErrorHandler {
     |            ^^^^^^^^^^^^^^^^^^^^^^^
     = note: required for `&error_recovery::CentralizedErrorHandler` to implement `UnwindSafe`
note: required because it's used within this closure
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |     let panic_prevented = std::panic::catch_unwind(|| {
     |                                                    ^^
note: required by a bound in `std::panic::catch_unwind`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/std/src/panic.rs:358:1
     = note: the full name for the type has been written to '/workspaces/ai-orchestrator-hub/backend/target/debug/deps/multiagent_hive-97ad738a146bae36.long-type-1067689355558452473.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the type `UnsafeCell<HashMap<std::string::String, Vec<RecoveryResult>>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |       let panic_prevented = std::panic::catch_unwind(|| {
     |  ___________________________------------------------_^
     | |                           |
     | |                           required by a bound introduced by this call
 406 | |         // This would normally panic, but should be handled gracefully
 407 | |         let future = handler.execute_with_centralized_handling(
 408 | |             || {
...    |
 422 | |         future
 423 | |     });
     | |_____^ `UnsafeCell<HashMap<std::string::String, Vec<RecoveryResult>>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
     |
     = help: within `error_recovery::CentralizedErrorHandler`, the trait `RefUnwindSafe` is not implemented for `UnsafeCell<HashMap<std::string::String, Vec<RecoveryResult>>>`
note: required because it appears within the type `tokio::sync::RwLock<HashMap<std::string::String, Vec<RecoveryResult>>>`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/rwlock.rs:88:12
     |
  88 | pub struct RwLock<T: ?Sized> {
     |            ^^^^^^
note: required because it appears within the type `alloc::sync::ArcInner<tokio::sync::RwLock<HashMap<std::string::String, Vec<RecoveryResult>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<ArcInner<RwLock<HashMap<String, Vec<RecoveryResult>>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `std::sync::Arc<tokio::sync::RwLock<HashMap<std::string::String, Vec<RecoveryResult>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `AdaptiveErrorRecovery`
    --> src/utils/error_recovery.rs:550:12
     |
 550 | pub struct AdaptiveErrorRecovery {
     |            ^^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `ContextAwareRecovery`
    --> src/utils/error_recovery.rs:2499:12
     |
2499 | pub struct ContextAwareRecovery {
     |            ^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `alloc::sync::ArcInner<ContextAwareRecovery>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<alloc::sync::ArcInner<ContextAwareRecovery>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `std::sync::Arc<ContextAwareRecovery>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `error_recovery::CentralizedErrorHandler`
    --> src/utils/error_recovery.rs:3142:12
     |
3142 | pub struct CentralizedErrorHandler {
     |            ^^^^^^^^^^^^^^^^^^^^^^^
     = note: required for `&error_recovery::CentralizedErrorHandler` to implement `UnwindSafe`
note: required because it's used within this closure
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |     let panic_prevented = std::panic::catch_unwind(|| {
     |                                                    ^^
note: required by a bound in `std::panic::catch_unwind`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/std/src/panic.rs:358:1
     = note: the full name for the type has been written to '/workspaces/ai-orchestrator-hub/backend/target/debug/deps/multiagent_hive-97ad738a146bae36.long-type-15990573554868780831.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the type `UnsafeCell<HashMap<std::string::String, AgentRecoveryState>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |       let panic_prevented = std::panic::catch_unwind(|| {
     |  ___________________________------------------------_^
     | |                           |
     | |                           required by a bound introduced by this call
 406 | |         // This would normally panic, but should be handled gracefully
 407 | |         let future = handler.execute_with_centralized_handling(
 408 | |             || {
...    |
 422 | |         future
 423 | |     });
     | |_____^ `UnsafeCell<HashMap<std::string::String, AgentRecoveryState>>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
     |
     = help: within `error_recovery::CentralizedErrorHandler`, the trait `RefUnwindSafe` is not implemented for `UnsafeCell<HashMap<std::string::String, AgentRecoveryState>>`
note: required because it appears within the type `tokio::sync::RwLock<HashMap<std::string::String, AgentRecoveryState>>`
    --> /home/codespace/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/rwlock.rs:88:12
     |
  88 | pub struct RwLock<T: ?Sized> {
     |            ^^^^^^
note: required because it appears within the type `alloc::sync::ArcInner<tokio::sync::RwLock<HashMap<std::string::String, AgentRecoveryState>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<ArcInner<RwLock<HashMap<String, AgentRecoveryState>>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `std::sync::Arc<tokio::sync::RwLock<HashMap<std::string::String, AgentRecoveryState>>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `error_recovery::AgentRecoveryManager`
    --> src/utils/error_recovery.rs:1629:12
     |
1629 | pub struct AgentRecoveryManager {
     |            ^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `ContextAwareRecovery`
    --> src/utils/error_recovery.rs:2499:12
     |
2499 | pub struct ContextAwareRecovery {
     |            ^^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `alloc::sync::ArcInner<ContextAwareRecovery>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:370:8
note: required because it appears within the type `PhantomData<alloc::sync::ArcInner<ContextAwareRecovery>>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/core/src/marker.rs:823:12
note: required because it appears within the type `std::sync::Arc<ContextAwareRecovery>`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/alloc/src/sync.rs:261:12
note: required because it appears within the type `error_recovery::CentralizedErrorHandler`
    --> src/utils/error_recovery.rs:3142:12
     |
3142 | pub struct CentralizedErrorHandler {
     |            ^^^^^^^^^^^^^^^^^^^^^^^
     = note: required for `&error_recovery::CentralizedErrorHandler` to implement `UnwindSafe`
note: required because it's used within this closure
    --> src/utils/centralized_error_handling_tests.rs:405:52
     |
 405 |     let panic_prevented = std::panic::catch_unwind(|| {
     |                                                    ^^
note: required by a bound in `std::panic::catch_unwind`
    --> /rustc/1159e78c4747b02ef996e55082b704c09b970588/library/std/src/panic.rs:358:1
     = note: the full name for the type has been written to '/workspaces/ai-orchestrator-hub/backend/target/debug/deps/multiagent_hive-97ad738a146bae36.long-type-5589085710972117509.txt'
     = note: consider using `--verbose` to print the full type name to the console

error[E0308]: mismatched types
   --> src/utils/centralized_error_handling_tests.rs:441:9
    |
436 |           || async {
    |           -- ----- the expected `async` block
    |           |
    |           the expected closure
...
441 | /         || async {
442 | |             Err::<(), HiveError>(HiveError::TaskNotFound {
443 | |                 id: "test".to_string(),
444 | |             })
445 | |         },
    | |_________^ expected `async` block, found a different `async` block
    |
    = note: expected closure `{closure@src/utils/centralized_error_handling_tests.rs:436:9: 436:11}`
               found closure `{closure@src/utils/centralized_error_handling_tests.rs:441:9: 441:11}`
    = note: closure has signature: `fn() -> {async block@src/utils/centralized_error_handling_tests.rs:441:12: 441:17}`
    = note: no two async blocks, even if identical, have the same type
    = help: consider pinning your async block and casting it to a trait object
    = note: no two closures, even if identical, have the same type
    = help: consider boxing your closure and/or using it as a trait object

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> src/tests/agent_tests.rs:295:30
    |
295 |         let response = agent.communicate("Hello", Some(target_agent_id)).await;
    |                              ^^^^^^^^^^^ -------  --------------------- unexpected argument #2 of type `std::option::Option<uuid::Uuid>`
    |                                          |
    |                                          expected `MessageEnvelope`, found `&str`
    |
note: method defined here
   --> src/agents/agent.rs:379:14
    |
379 |     async fn communicate(
    |              ^^^^^^^^^^^
380 |         &mut self,
381 |         envelope: MessageEnvelope,
    |         --------
help: remove the extra argument
    |
295 -         let response = agent.communicate("Hello", Some(target_agent_id)).await;
295 +         let response = agent.communicate(/* MessageEnvelope */).await;
    |

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/agent_tests.rs:298:31
    |
298 |         assert!(response_text.contains("TestAgent"));
    |                               ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/agent_tests.rs:299:31
    |
299 |         assert!(response_text.contains(&target_agent_id.to_string()));
    |                               ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/agent_tests.rs:300:31
    |
300 |         assert!(response_text.contains("Hello"));
    |                               ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> src/tests/agent_tests.rs:303:40
    |
303 |         let broadcast_response = agent.communicate("Broadcast message", None).await;
    |                                        ^^^^^^^^^^^ -------------------  ---- unexpected argument #2 of type `std::option::Option<_>`
    |                                                    |
    |                                                    expected `MessageEnvelope`, found `&str`
    |
note: method defined here
   --> src/agents/agent.rs:379:14
    |
379 |     async fn communicate(
    |              ^^^^^^^^^^^
380 |         &mut self,
381 |         envelope: MessageEnvelope,
    |         --------
help: remove the extra argument
    |
303 -         let broadcast_response = agent.communicate("Broadcast message", None).await;
303 +         let broadcast_response = agent.communicate(/* MessageEnvelope */).await;
    |

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/agent_tests.rs:306:32
    |
306 |         assert!(broadcast_text.contains("TestAgent"));
    |                                ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/agent_tests.rs:307:32
    |
307 |         assert!(broadcast_text.contains("broadcasting"));
    |                                ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> src/tests/integration_tests.rs:546:18
    |
546 |                 .communicate("Hello from agent 1", Some(agent2_id))
    |                  ^^^^^^^^^^^ --------------------  --------------- unexpected argument #2 of type `std::option::Option<uuid::Uuid>`
    |                              |
    |                              expected `MessageEnvelope`, found `&str`
    |
note: method defined here
   --> src/agents/agent.rs:379:14
    |
379 |     async fn communicate(
    |              ^^^^^^^^^^^
380 |         &mut self,
381 |         envelope: MessageEnvelope,
    |         --------
help: remove the extra argument
    |
546 -                 .communicate("Hello from agent 1", Some(agent2_id))
546 +                 .communicate(/* MessageEnvelope */)
    |

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/integration_tests.rs:551:35
    |
551 |             assert!(response_text.contains("Communicator1"));
    |                                   ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/integration_tests.rs:552:35
    |
552 |             assert!(response_text.contains(&agent2_id.to_string()));
    |                                   ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0061]: this method takes 1 argument but 2 arguments were supplied
   --> src/tests/integration_tests.rs:561:45
    |
561 |             let broadcast_response = agent2.communicate("Broadcasting message", None).await;
    |                                             ^^^^^^^^^^^ ----------------------  ---- unexpected argument #2 of type `std::option::Option<_>`
    |                                                         |
    |                                                         expected `MessageEnvelope`, found `&str`
    |
note: method defined here
   --> src/agents/agent.rs:379:14
    |
379 |     async fn communicate(
    |              ^^^^^^^^^^^
380 |         &mut self,
381 |         envelope: MessageEnvelope,
    |         --------
help: remove the extra argument
    |
561 -             let broadcast_response = agent2.communicate("Broadcasting message", None).await;
561 +             let broadcast_response = agent2.communicate(/* MessageEnvelope */).await;
    |

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/integration_tests.rs:565:36
    |
565 |             assert!(broadcast_text.contains("Communicator2"));
    |                                    ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0599]: no method named `contains` found for enum `std::option::Option` in the current scope
   --> src/tests/integration_tests.rs:566:36
    |
566 |             assert!(broadcast_text.contains("broadcasting"));
    |                                    ^^^^^^^^ method not found in `std::option::Option<MessageEnvelope>`

error[E0716]: temporary value dropped while borrowed
    --> src/agents/adaptive_verification.rs:1273:14
     |
1273 |               &VerificationOutcome {
     |  ______________^
1274 | |                 timestamp: Utc::now(),
1275 | |                 task_id: uuid::Uuid::new_v4(),
1276 | |                 verification_result: SimpleVerificationResult {
...    |
1292 | |                 rule_thresholds_used: std::collections::HashMap::new(),
1293 | |             },
     | |_____________^ creates a temporary value which is freed while still in use
...
1315 |           ];
     |            - temporary value is freed at the end of this statement
...
1318 |               &outcomes, 0.8, &config,
     |               --------- borrow later used here
     |
help: consider using a `let` binding to create a longer lived value
     |
1272 ~         let binding = VerificationOutcome {
1273 +                 timestamp: Utc::now(),
1274 +                 task_id: uuid::Uuid::new_v4(),
1275 +                 verification_result: SimpleVerificationResult {
1276 +                     task_id: uuid::Uuid::new_v4(),
1277 +                     verification_status: SimpleVerificationStatus::Passed,
1278 +                     confidence_score: 0.85,
1279 +                     goal_alignment_score: 0.9,
1280 +                     format_compliance_score: 0.92,
1281 +                     overall_score: 0.9,
1282 +                     verification_tier: VerificationTier::Standard,
1283 +                     issues_found: vec![],
1284 +                     verification_time_ms: 1000,
1285 +                     verified_at: Utc::now(),
1286 +                     verifier_notes: "Test evaluation result".to_string(),
1287 +                 },
1288 +                 actual_task_success: true,
1289 +                 verification_time_ms: 1000,
1290 +                 threshold_used: 0.8,
1291 +                 rule_thresholds_used: std::collections::HashMap::new(),
1292 +             };
1293 ~         let outcomes = vec![
1294 ~             &binding,
     |

error[E0716]: temporary value dropped while borrowed
    --> src/agents/adaptive_verification.rs:1294:14
     |
1294 |               &VerificationOutcome {
     |  ______________^
1295 | |                 timestamp: Utc::now(),
1296 | |                 task_id: uuid::Uuid::new_v4(),
1297 | |                 verification_result: SimpleVerificationResult {
...    |
1313 | |                 rule_thresholds_used: std::collections::HashMap::new(),
1314 | |             },
     | |_____________^ creates a temporary value which is freed while still in use
1315 |           ];
     |            - temporary value is freed at the end of this statement
...
1318 |               &outcomes, 0.8, &config,
     |               --------- borrow later used here
     |
help: consider using a `let` binding to create a longer lived value
     |
1272 ~         let binding = VerificationOutcome {
1273 +                 timestamp: Utc::now(),
1274 +                 task_id: uuid::Uuid::new_v4(),
1275 +                 verification_result: SimpleVerificationResult {
1276 +                     task_id: uuid::Uuid::new_v4(),
1277 +                     verification_status: SimpleVerificationStatus::Failed,
1278 +                     confidence_score: 0.7,
1279 +                     goal_alignment_score: 0.3,
1280 +                     format_compliance_score: 0.4,
1281 +                     overall_score: 0.3,
1282 +                     verification_tier: VerificationTier::Standard,
1283 +                     issues_found: vec![],
1284 +                     verification_time_ms: 1500,
1285 +                     verified_at: Utc::now(),
1286 +                     verifier_notes: "Test failed result".to_string(),
1287 +                 },
1288 +                 actual_task_success: false,
1289 +                 verification_time_ms: 1500,
1290 +                 threshold_used: 0.8,
1291 +                 rule_thresholds_used: std::collections::HashMap::new(),
1292 +             };
1293 ~         let outcomes = vec![
1294 |             &VerificationOutcome {
 ...
1314 |             },
1315 ~             &binding,
     |

warning: unused variable: `task_id`
   --> src/core/hive/coordinator/tests.rs:249:13
    |
249 |         let task_id = coordinator.create_task(task_config).await?;
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_task_id`

warning: unused variable: `creator`
   --> src/core/hive/task_management/task_creation.rs:219:13
    |
219 |         let creator = TaskCreator::new(tx, config);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_creator`

warning: unused variable: `initial_tasks`
   --> src/core/hive/mod.rs:308:13
    |
308 |         let initial_tasks = initial_status
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_initial_tasks`

warning: unused variable: `updated_tasks`
   --> src/core/hive/mod.rs:337:13
    |
337 |         let updated_tasks = updated_status
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_updated_tasks`

error[E0507]: cannot move out of `batch_results`, a captured variable in an `Fn` closure
    --> src/infrastructure/intelligent_cache.rs:2338:58
     |
2330 |         let batch_results = vec![
     |             ------------- captured outer variable
...
2338 |             .execute_batched_queries(batch_requests, |_| async { Ok(batch_results) })
     |                                                      --- ^^^^^      -------------
     |                                                      |   |          |
     |                                                      |   |          variable moved due to use in coroutine
     |                                                      |   |          move occurs because `batch_results` has type `Vec<Result<serde_json::Value, utils::error::HiveError>>`, which does not implement the `Copy` trait
     |                                                      |   `batch_results` is moved here
     |                                                      captured by this `Fn` closure
     |
help: consider cloning the value if the performance cost is acceptable
     |
2338 |             .execute_batched_queries(batch_requests, |_| async { Ok(batch_results.clone()) })
     |                                                                                  ++++++++

error[E0382]: borrow of moved value: `batch_results`
    --> src/infrastructure/intelligent_cache.rs:2345:13
     |
2330 |         let batch_results = vec![
     |             ------------- move occurs because `batch_results` has type `Vec<Result<serde_json::Value, utils::error::HiveError>>`, which does not implement the `Copy` trait
...
2338 |             .execute_batched_queries(batch_requests, |_| async { Ok(batch_results) })
     |                                                      ---            ------------- variable moved due to use in closure
     |                                                      |
     |                                                      value moved into closure here
...
2345 |             batch_results.len(),
     |             ^^^^^^^^^^^^^ value borrowed here after move
     |
help: consider cloning the value if the performance cost is acceptable
     |
2338 |             .execute_batched_queries(batch_requests, |_| async { Ok(batch_results.clone()) })
     |                                                                                  ++++++++

warning: unused variable: `metrics`
   --> src/infrastructure/performance_integration.rs:532:13
    |
532 |         let metrics = performance_layer.get_metrics().await;
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_metrics`

warning: unused variable: `target_met`
    --> src/infrastructure/streaming.rs:1595:13
     |
1595 |         let target_met = processor.is_memory_target_met().await;
     |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_met`

warning: `multiagent-hive` (lib test) generated 97 warnings (84 duplicates)
error: could not compile `multiagent-hive` (lib test) due to 51 previous errors; 97 warnings emitted

Caused by:
  process didn't exit successfully: `/home/codespace/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name multiagent_hive --edition=2021 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 '--deny=clippy::suspicious' '--warn=clippy::style' '--warn=clippy::perf' '--warn=clippy::pedantic' '--deny=clippy::correctness' '--warn=clippy::complexity' '--warn=clippy::all' '--warn=clippy::unwrap_used' --allow=unused_variables --allow=unused_imports --warn=unsafe_code --warn=unreachable_code '--warn=clippy::unreachable' '--warn=clippy::unimplemented' '--allow=clippy::too_many_lines' '--warn=clippy::todo' '--allow=clippy::similar_names' '--warn=clippy::rc_mutex' '--warn=clippy::rc_buffer' '--warn=clippy::panic' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' --warn=missing_docs '--warn=clippy::expect_used' --allow=dead_code '--warn=clippy::clone_on_ref_ptr' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_precision_loss' '--allow=clippy::cast_possible_truncation' --test --cfg 'feature="basic-nlp"' --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("advanced-neural", "basic-nlp", "default", "gpu-acceleration", "ruv-fann"))' -C metadata=b98aa1720fd2f596 -C extra-filename=-97ad738a146bae36 --out-dir /workspaces/ai-orchestrator-hub/backend/target/debug/deps -C incremental=/workspaces/ai-orchestrator-hub/backend/target/debug/incremental -L dependency=/workspaces/ai-orchestrator-hub/backend/target/debug/deps --extern aes_gcm=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libaes_gcm-db88c165df00a659.rmeta --extern anyhow=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libanyhow-bd4207286f9386d7.rmeta --extern argon2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libargon2-0710a11c6c2aceb4.rmeta --extern async_trait=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libasync_trait-13c839a89e8262e6.so --extern axum=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libaxum-ced882dbe024e94c.rmeta --extern base64=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libbase64-c5cb9a52f2075ae5.rmeta --extern bincode=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libbincode-9b44bc61b594cfb7.rmeta --extern bytes=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libbytes-ea8af492080e3cde.rmeta --extern chrono=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libchrono-2933497478dfaba3.rmeta --extern criterion=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libcriterion-6be2f857929dc883.rmeta --extern dashmap=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libdashmap-732cde56fcf650f5.rmeta --extern flate2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libflate2-34d83fb0caa3e409.rmeta --extern futures=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libfutures-7cabe8bb568723eb.rmeta --extern futures_util=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libfutures_util-504d1c0b17a4cee9.rmeta --extern hex=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libhex-4ccaaced0dd5bf6b.rmeta --extern jsonwebtoken=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libjsonwebtoken-3ed6ff27fb4f4b22.rmeta --extern nalgebra=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libnalgebra-696e95bc704fac43.rmeta --extern num_cpus=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libnum_cpus-d510037fa9e0d994.rmeta --extern once_cell=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libonce_cell-199800b58c1e0d8f.rmeta --extern opentelemetry=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libopentelemetry-6c23fbf8aad7be0f.rmeta --extern opentelemetry_jaeger=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libopentelemetry_jaeger-39f4a787415cb9ed.rmeta --extern pbkdf2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libpbkdf2-da9fef449c277fda.rmeta --extern petgraph=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libpetgraph-185e98c57195fd6d.rmeta --extern rand=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/librand-7024a81360286bb1.rmeta --extern regex=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libregex-427c3499f4d02ef2.rmeta --extern reqwest=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libreqwest-28ccd7e18c52537b.rmeta --extern ring=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libring-f612ea0cdbf6ddbc.rmeta --extern rusqlite=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/librusqlite-685c64a368a5d3a5.rmeta --extern serde=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libserde-f0d5fd9a0550a223.rmeta --extern serde_json=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libserde_json-a6109979fd104e00.rmeta --extern sha2=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libsha2-196e67ed5361a052.rmeta --extern tempfile=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtempfile-7ae3a4e9986cbbc4.rmeta --extern thiserror=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libthiserror-8fc82fc44438484f.rmeta --extern tokio=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtokio-a2f283c5213347f3.rmeta --extern tokio_tungstenite=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtokio_tungstenite-f1e67fef0348af05.rmeta --extern tokio_util=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtokio_util-9f867fbe1765800e.rmeta --extern toml=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtoml-711d3efe78c4eda9.rmeta --extern tower=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtower-0994836d1aeb5964.rmeta --extern tower_http=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtower_http-7d73031358315aa5.rmeta --extern tracing=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtracing-1f4deb83d081ec2a.rmeta --extern tracing_opentelemetry=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtracing_opentelemetry-841dfd359133f8dc.rmeta --extern tracing_subscriber=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libtracing_subscriber-70bd91828fff4c75.rmeta --extern uuid=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libuuid-154455992c1e1822.rmeta --extern warp=/workspaces/ai-orchestrator-hub/backend/target/debug/deps/libwarp-a09a912fa84ab94c.rmeta -L native=/workspaces/ai-orchestrator-hub/backend/target/debug/build/ring-5da70d27daf4f02b/out -L native=/workspaces/ai-orchestrator-hub/backend/target/debug/build/libsqlite3-sys-559589f9073babd3/out` (signal: 15, SIGTERM: termination signal)
