# Unwrap() Prevention Monitoring Configuration
# Critical security monitoring for AI Orchestrator Hub

version: "1.0"
monitoring_system: "unwrap_prevention"

# Alert Configuration
alerts:
  - name: "production_unwrap_detected"
    description: "Unwrap() calls detected in production code"
    severity: "critical"
    priority: "p0"
    conditions:
      - metric: "code_quality.unwrap_calls"
        operator: ">"
        threshold: 0
        window: "1m"
    actions:
      - type: "webhook"
        url: "${UNWRAP_ALERT_WEBHOOK}"
        payload:
          text: "🚨 CRITICAL: Unwrap() calls detected in production code"
          severity: "critical"
          system: "ai-orchestrator-hub"
      - type: "email"
        recipients: 
          - "security@company.com"
          - "dev-team@company.com"
        subject: "CRITICAL: Unwrap() Security Violation"
      - type: "slack"
        channel: "#alerts-critical"
        message: "@channel 🚨 Unwrap() calls detected in production code!"
      - type: "block_deployment"
        enabled: true
        message: "Deployment blocked: unwrap() calls in production"

  - name: "unwrap_commit_added"
    description: "Commit added unwrap() calls to production code"
    severity: "high"
    priority: "p1"
    conditions:
      - metric: "git.unwrap_additions"
        operator: ">"
        threshold: 0
        window: "5m"
    actions:
      - type: "block_merge"
        enabled: true
        message: "Cannot merge: unwrap() calls detected"
      - type: "slack"
        channel: "#dev-alerts"
        message: "⚠️ New commit contains unwrap() calls in production code"
      - type: "pr_comment"
        enabled: true
        template: "unwrap_violation"

  - name: "monitoring_system_down"
    description: "Unwrap() monitoring system is not responding"
    severity: "medium"
    priority: "p2"
    conditions:
      - metric: "monitoring.last_scan"
        operator: ">"
        threshold: 300  # 5 minutes
        window: "1m"
    actions:
      - type: "slack"
        channel: "#dev-ops"
        message: "🔧 Unwrap() monitoring system may be down"

# Monitoring Configuration
monitoring:
  enabled: true
  scan_interval: "5m"
  full_scan_interval: "1h"
  retention_period: "30d"
  max_concurrent_scans: 3
  
  # File patterns to monitor
  watch_patterns:
    - "backend/src/**/*.rs"
  
  # Exclusion patterns (test files, examples, etc.)
  exclude_patterns:
    - "backend/src/tests/**"
    - "backend/src/**/*test*.rs"
    - "backend/src/**/tests.rs"
    - "backend/examples/**"
    - "backend/benches/**"
    - "backend/src/test_*"

# Scan Configuration
scans:
  - name: "production_unwrap_scan"
    type: "file_pattern"
    description: "Scan production Rust files for unwrap() calls"
    enabled: true
    paths: 
      - "backend/src"
    exclude_paths:
      - "backend/src/tests"
      - "backend/src/**/*test*.rs"
      - "backend/src/**/tests.rs"
      - "backend/examples"
      - "backend/benches"
    patterns:
      - "\.unwrap\(\)"
      - "\.expect\("
    ignore_patterns:
      - "#[cfg(test)]"      # Ignore test modules
      - "// SAFETY:"        # Ignore documented unsafe code
      - "// TODO: remove"   # Ignore temporary code with removal plan
    
  - name: "commit_unwrap_scan"
    type: "git_diff"
    description: "Scan recent commits for unwrap() additions"
    enabled: true
    since: "1 hour ago"
    paths: 
      - "backend/src/**/*.rs"
    exclude_paths:
      - "backend/src/tests"
      - "backend/src/**/*test*.rs"
    patterns:
      - "^\+.*\.unwrap\(\)"
      - "^\+.*\.expect\("

  - name: "pr_unwrap_scan"
    type: "pull_request"
    description: "Scan pull request changes for unwrap() calls"
    enabled: true
    trigger: "on_pr_create"
    paths:
      - "backend/src/**/*.rs"
    exclude_paths:
      - "backend/src/tests"
    patterns:
      - "\.unwrap\(\)"
      - "\.expect\("

# Reporting Configuration
reporting:
  enabled: true
  
  # Daily summary report
  daily_summary:
    enabled: true
    time: "09:00"
    timezone: "UTC"
    recipients:
      - "dev-team@company.com"
    include:
      - "scan_results"
      - "compliance_metrics"
      - "trend_analysis"
  
  # Weekly detailed report
  weekly_report:
    enabled: true
    day: "monday"
    time: "09:00"
    timezone: "UTC"
    recipients:
      - "security@company.com"
      - "dev-leads@company.com"
    include:
      - "compliance_trends"
      - "violation_analysis"
      - "developer_education_metrics"
      - "recommendations"
  
  # Real-time metrics export
  metrics_export:
    enabled: true
    format: "prometheus"
    endpoint: "/metrics/unwrap-prevention"
    interval: "30s"

# Metrics Definition
metrics:
  - name: "unwrap_calls_total"
    type: "gauge"
    description: "Total number of unwrap() calls in production code"
    labels: ["file", "function", "line"]
    
  - name: "scans_completed_total"
    type: "counter"
    description: "Total number of unwrap() scans completed"
    labels: ["scan_type", "status"]
    
  - name: "violations_detected_total"
    type: "counter"
    description: "Total number of unwrap() violations detected"
    labels: ["severity", "file_type"]
    
  - name: "compliance_percentage"
    type: "gauge"
    description: "Percentage of files that are unwrap() compliant"
    
  - name: "detection_time_seconds"
    type: "histogram"
    description: "Time from unwrap() introduction to detection"
    buckets: [30, 300, 1800, 3600, 21600, 86400]
    
  - name: "fix_time_seconds"
    type: "histogram"
    description: "Time from detection to fix"
    buckets: [300, 1800, 3600, 21600, 86400, 604800]

# Integration Configuration
integrations:
  github:
    enabled: true
    token: "${GITHUB_TOKEN}"
    repository: "ai-orchestrator-hub"
    check_name: "unwrap-prevention"
    
  slack:
    enabled: true
    token: "${SLACK_BOT_TOKEN}"
    channels:
      critical: "#alerts-critical"
      high: "#dev-alerts"
      medium: "#dev-ops"
      info: "#dev-general"
    
  email:
    enabled: true
    smtp_server: "${SMTP_SERVER}"
    smtp_port: 587
    username: "${SMTP_USERNAME}"
    password: "${SMTP_PASSWORD}"
    from_address: "alerts@company.com"
    
  prometheus:
    enabled: true
    pushgateway_url: "${PROMETHEUS_PUSHGATEWAY_URL}"
    job_name: "unwrap-prevention"
    
  grafana:
    enabled: true
    dashboard_uid: "unwrap-prevention"
    dashboard_url: "${GRAFANA_URL}/d/unwrap-prevention"

# Compliance Rules
compliance:
  target_metrics:
    unwrap_calls_in_production: 0
    scan_coverage_percentage: 100
    compliance_rate_percentage: 100
    max_detection_time_minutes: 5
    max_fix_time_hours: 24
  
  enforcement:
    block_deployments: true
    block_merges: true
    require_approval_for_exceptions: true
    escalate_after_hours: 2
  
  exceptions:
    allowed_files: []  # No exceptions for unwrap() calls
    temporary_exceptions: []
    emergency_override: false

# Education and Training
education:
  enabled: true
  
  resources:
    - name: "Unwrap Alternatives Guide"
      url: "/docs/UNWRAP_ALTERNATIVES.md"
      type: "documentation"
    
    - name: "Security Best Practices"
      url: "/docs/security-hardening.md"
      type: "training"
    
    - name: "Error Handling Patterns"
      url: "/docs/error-handling-patterns.md"
      type: "examples"
  
  reminders:
    frequency: "weekly"
    channel: "#dev-tips"
    message: "💡 Remember: Use proper error handling instead of unwrap() calls!"

# Backup and Recovery
backup:
  enabled: true
  scan_results_retention: "90d"
  metrics_retention: "1y"
  configuration_backup: "daily"

# Performance Configuration
performance:
  max_scan_duration_minutes: 10
  parallel_scans: true
  cache_scan_results: true
  cache_ttl_minutes: 30
  
# Logging Configuration
logging:
  level: "info"
  format: "json"
  file: "/var/log/unwrap-prevention.log"
  max_file_size: "100MB"
  max_files: 10
  
  audit_log:
    enabled: true
    file: "/var/log/unwrap-prevention-audit.log"
    include_events:
      - "violation_detected"
      - "scan_completed"
      - "alert_sent"
      - "exception_granted"